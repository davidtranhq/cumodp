***********************************************
Tree of Project:
├── bin
├── doc
├── include
├── scripts
│   └── mapleScripts
├── src
│   └── c_code
└── test
    ├── data
    │   └── data_0_1_1
    ├── testResults
    │   ├── Kepler-GTX_760
    │   │   ├── r1279
    │   │   ├── r1286
    │   │   └── r1298
    │   └── Tesla-2050
    └── tmp

17 directories

***********************************************
generateData.cpp
Mode=0, seed=0, vectorSize=1024, coefficientSize=8, range=R
***********************************************
bigArithmetic_test.cu
operation, iteration, shuffle, padding, inputVectorSize, dataSet
***********************
input arguments for 
	operation
	  0 : Addition (default)
	  1 : Multiplication
	  2 : Subtraction
	  3 : Cyclic Shift
	  4 : FFT_16
	  5 : FFT_256
	  6 : FFT_4k
	  7 : FFT_16k
	  8 : FFT_64k

***********************
	iterations
	  - number of times to repeat one iteration (default = 1)
	  - used for measuring performance
***********************
	shuffleMode:
	  0 : plain (default)
	  1 : shuffled input
***********************
	padding mode
	  0 :
		dynamicMemSize = coefficientSize * TN;
	 	dynamicMemSize = 8 * TN;
	 	pos = 8*tid
	***********
	  1:
		dynamicMemSize = coefficientSize * TN + 28;
		dynamicMemSize = 8 * TN + 28;
		pos = 8*tid  + (tid/4)%8
	***********
	  2:
		dynamicMemSize = coefficientSize * TN + 32;
		dynamicMemSize = 8 * TN + 32;
		pos = 8*tid  + (tid/4)%8
	***********
	  3:
		dynamicMemSize = 8 * TN + (TN * TN) / 16;
		pos = 8*tid  + (tid/4);
	***********
	  4:
		dynamicMemSize = 8 * TN + (TN * TN - 4 * TN) / 32;
		pos = 8*tid  + (tid/4)%8
***********************
	usingDynamicMem
	  0: use constant shared memory 
	  1: use dynamic shared memory (default)
***********************************************
scripts/
	makeLinks.sh: adds links from $CUMODP_HOME/src to $PROJECT/src

	compile.sh: compiles the files bigArithmetic.cu and generateData.cpp in /src and adds the binary to /bin

	generateData.sh: takes (mode, xSeed, ySeed) and generate two input vectors in /test/tmp/data/data_mode_xseed,yseed

	runMaple.sh: takes (operation, mode, xSeed, ySeed) and runs maple for dataset

	runCuda.sh: takes (operation, iterations, shuffling, padding, mode, xSeed, ySeed), runs bigPrime Cuda for dataset

	compare.sh: compares the results of CUDA and Maple implementation of same operation
				(the /bin/bigArithmetic_test.bin against /scripts/mapleScripts)

	profiler.sh: takes ($1=shuffleMode, $2=operation, $3=iteration, $4=padding), then profiles "/bin/bigArithmetic.bin"
				 , stores result under "/test/profilingReports" directory as "report_op_iter_shuffle_padding_data.log"

	generateReport.sh: takes ($1=name) of report, then writes it with all profiling reports in /data/profilingReports/
***********************************************
test/
	/tmp: 
		contains temporary computations (either maple or cuda uses this place for computation)

	/data: 
		contains all datasets which are generated by "generateData.sh"

	/profilingReports: 
		contains result of profiling for corresponding "report_op_iter_shuffle_padding_data.log"
***********************************************
to check:
	+:check if CUMODP_HOME has a "/" at the end, remove it and store in another CUMODP_HOME variable, do in all scripts
***********************************************
on Seperate Compilation:
	REF: 
		http://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#using-separate-compilation-in-cuda

	+: default compilation behavior: 
		in CUDA 5.0 and earlier, the whole device code should in one file, one step compilation

	+: we can have seperate compilation by nvcc options:
